{"version":3,"sources":["components/Form.js","components/ItemResult.js","components/ResultList.js","App.js","index.js"],"names":["Form","handleDate","handleSubmit","handleSteps","steps","date","edit","onSubmit","className","htmlFor","onChange","type","id","name","readOnly","value","format","Date","required","placeholder","disabled","ItemResult","handleRemove","handleEditMode","isEdit","cancelEditMode","handleSaveEditChange","idx","editDate","stepsAll","editSteps","onClick","cn","e","ResultList","tableData","Fragment","length","map","nanoid","App","useState","setDate","setSteps","setEdit","setEditSteps","setEditDate","setTableData","formattedDate","handleKey","console","log","keyCode","window","removeEventListener","updatedData","item","useEffect","addEventListener","target","alert","preventDefault","foundId","find","d","reduce","acc","Number","sumSteps","updateData","el","idItem","updateSubmit","filter","foundedItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MA4CeA,EAzCF,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,WAAYC,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAClE,OACE,uBAAMC,SAAUL,EAAcM,UAAU,OAAxC,UACE,uBAAOA,UAAU,YAAYC,QAAQ,OAArC,8EAGA,uBAAOD,UAAU,gBAAgBC,QAAQ,WAAzC,2EAGA,uBACEC,SAAUT,EACVU,KAAK,OACLH,UAAU,YACVI,GAAG,OACHC,KAAK,OACLC,SAAUR,IAAQ,EAClBS,MAAOC,YAAO,IAAIC,KAAKZ,GAAO,cAC9Ba,UAAU,IAEZ,uBACEP,KAAK,SACLD,SAAUP,EACVe,UAAU,EACVV,UAAU,gBACVI,GAAG,WACHC,KAAK,WACLE,MAAOT,EAAO,EAAIF,EAClBU,SAAUR,IAAQ,EAClBa,YAAY,WAEd,wBACEZ,SAAUL,EACVM,UAAU,SACVG,KAAK,SACLS,SAAUd,IAAQ,EAJpB,oB,gBCqCSe,EAlEI,SAAC,GAgBb,IAfLT,EAeI,EAfJA,GACAP,EAcI,EAdJA,KACAD,EAaI,EAbJA,MACAkB,EAYI,EAZJA,aACAC,EAWI,EAXJA,eACAjB,EAUI,EAVJA,KACAkB,EASI,EATJA,OACAvB,EAQI,EARJA,WACAE,EAOI,EAPJA,YACAsB,EAMI,EANJA,eACAC,EAKI,EALJA,qBACAC,EAII,EAJJA,IAEAC,GAEI,EAHJC,SAGI,EAFJD,UACAE,EACI,EADJA,UAEA,OAAOxB,EACL,sBAAKE,UAAU,YAAf,UACE,uBACEE,SAAUT,EACVU,KAAK,OACLH,UAAU,YACVI,GAAG,OACHC,KAAK,OACLE,MAAOC,YAAO,IAAIC,KAAKW,GAAW,cAClCV,UAAU,IAEZ,uBACEP,KAAK,SACLD,SAAUP,EACVe,UAAU,EACVV,UAAU,gBACVI,GAAG,WACHC,KAAK,WACLE,MAAOS,GAAUM,EACjBX,YAAY,WAEd,wBAAQY,QAAS,kBAAMN,EAAeE,IAAMnB,UAAU,SAAtD,oBAGA,wBAAQA,UAAU,SAASuB,QAAS,kBAAML,EAAqBd,IAA/D,qBAKF,qBAAIJ,UAAWwB,IAAG,aAAc,CAAE,wBAAyB1B,IAA3D,UACE,+BAAOU,YAAO,IAAIC,KAAKZ,GAAO,gBAC9B,+BAAOD,IACP,sBAAKI,UAAU,QAAf,UACE,mBACEA,UAAWwB,IAAG,mCAAoC,CAChD,sBAAuB1B,IAEzB,cAAY,OACZyB,QAAS,SAACE,GAAD,OAAQT,GAAUD,EAAeI,EAAKM,MAEjD,mBACEzB,UAAU,cACVuB,QAAS,kBAAOP,GAAUF,EAAaV,IACvC,cAAY,gB,QCTPsB,EAnDI,SAAC,GAab,IAZLC,EAYI,EAZJA,UACAb,EAWI,EAXJA,aACAC,EAUI,EAVJA,eACAG,EASI,EATJA,qBACAF,EAQI,EARJA,OACAvB,EAOI,EAPJA,WACAE,EAMI,EANJA,YACAD,EAKI,EALJA,aACAuB,EAII,EAJJA,eACAI,EAGI,EAHJA,SACAD,EAEI,EAFJA,SACAE,EACI,EADJA,UAEA,OACE,eAAC,IAAMM,SAAP,WACE,sBAAK5B,UAAU,cAAf,UACE,oGACA,iGACA,uFAEF,oBAAIA,UAAU,aAAd,SACG2B,EAAUE,OAAS,EAClBF,EAAUG,KAAI,WAA4BX,GAA5B,IAAGtB,EAAH,EAAGA,KAAMD,EAAT,EAASA,MAAOQ,EAAhB,EAAgBA,GAAIN,EAApB,EAAoBA,KAApB,OACZ,cAAC,EAAD,CAEED,KAAMA,EACNwB,SAAUA,EACVP,aAAcA,EACdC,eAAgBA,EAChBnB,MAAOA,EACPQ,GAAIA,EACJN,KAAMA,EACNkB,OAAQA,EACRvB,WAAYA,EACZE,YAAaA,EACbD,aAAcA,EACduB,eAAgBA,EAChBE,IAAKA,EACLC,SAAUA,EACVE,UAAWA,EACXJ,qBAAsBA,GAhBjBa,kBAoBT,oBAAI/B,UAAU,SAAd,sCC2IKgC,EAtLH,WACV,MAAwBC,mBAAS,IAAIxB,MAArC,mBAAOZ,EAAP,KAAaqC,EAAb,KACA,EAA0BD,mBAAS,GAAnC,mBAAOrC,EAAP,KAAcuC,EAAd,KACA,EAAwBF,oBAAS,GAAjC,mBAAOnC,EAAP,KAAasC,EAAb,KACA,EAAkCH,mBAAS,GAA3C,mBAAOX,EAAP,KAAkBe,EAAlB,KACA,EAAgCJ,mBAAS,GAAzC,mBAAOb,EAAP,KAAiBkB,EAAjB,KACA,EAAkCL,mBAAS,IAA3C,mBAAON,EAAP,KAAkBY,EAAlB,KACMC,EAAgBhC,YAAO,IAAIC,KAAKZ,GAAO,cAUvC4C,EAAY,SAAZA,EAAahB,GAEjB,GADAiB,QAAQC,IAAI,YAAalB,EAAEmB,SACT,KAAdnB,EAAEmB,QAAgB,CACpBC,OAAOC,oBAAoB,UAAWL,GACtCL,GAAQ,GACR,IAAMW,EAAcpB,EAAUG,KAAI,SAACkB,GAAD,OAChCA,EAAKlD,KAAL,2BAAiBkD,GAAjB,IAAuBlD,MAAM,IAAUkD,KAEzCT,EAAaQ,KAYjBE,qBAAU,WAGR,OAFAP,QAAQC,IAAI,kNACZE,OAAOK,iBAAiB,UAAWT,GAC5B,kBAAMI,OAAOC,oBAAoB,UAAWL,MAClD,CAAC3C,IAEJ,IAAML,EAAa,SAAC,GAA2B,IAAfc,EAAc,EAAxB4C,OAAU5C,MAE5BC,YAAO,IAAIC,KAAKF,GAAQ,cAAgBC,YAAO,IAAIC,KAAQ,cAE3D2C,MAAM,0MAELtD,EAAwBwC,EAAY/B,GAA7B2B,EAAQ3B,IAGdZ,EAAc,SAAC,GAA2B,IAAfY,EAAc,EAAxB4C,OAAU5C,MAC9BT,EAAuCS,GAAS,GAAK8B,EAAa9B,GAA3DA,GAAS,GAAK4B,EAAS5B,IAqGjC,OACE,sBAAKP,UAAU,YAAf,UACE,qBAAKA,UAAU,QAAf,mGACA,cAAC,EAAD,CACEP,WAAYA,EACZE,YAAaA,EACbD,aArFe,SAAC+B,GAAO,IAAD,EAE1B,GADAA,EAAE4B,mBACEzD,GAAS,IAAMC,EAAnB,CAGA,IAAMyD,EAAO,UAAG3B,EAAU4B,MAAK,SAACC,GAAD,OAAOA,EAAEpD,KAAOoC,YAAlC,aAAG,EAA+CpC,GAE/D,GAAIkD,IAAYxD,EACdyC,EAvBa,SAACe,GAChB,OAAO3B,EAAU8B,QAAO,SAACC,EAAKV,GAC5B,OAAIA,EAAK5C,KAAOkD,EACR,GAAN,mBACKI,GADL,4BAGOV,GAHP,IAIIpD,MAAO+D,OAAOX,EAAKpD,OAAS+D,OAAO/D,QAIzCoD,EAAKlD,MAAO,EACN,GAAN,mBAAW4D,GAAX,CAAgBV,OACf,IAUYY,CAASN,SACjB,GAAIxD,EAAM,CACf,IAAM+D,EAAalC,EAAUG,KAAI,SAACgC,GAQhC,OAPIA,EAAG1D,KAAOkD,IACZQ,EAAGlE,MAAQA,EACXkE,EAAG1D,GAAKoC,EACRsB,EAAGjE,KAAO2C,EACVsB,EAAGhE,MAAO,GAGLgE,KAETvB,EAAasB,QAEbtB,EAAa,GAAD,mBACPZ,GADO,CAEV,CACEvB,GAAIoC,EACJ3C,KAAM2C,EACN5C,YA9CNsC,EAAQ,IAAIzB,MACZ0B,EAAS,GACTC,GAAQ,KAuGJvC,KAAMA,EACND,MAAOA,EACPE,KAAMA,IAER,cAAC,EAAD,CACEsB,SAAUA,EACVE,UAAWA,EACXD,SAAUzB,EACVmB,eAtCiB,SAACX,GACtB,IAAM2C,EAAW,YAAOpB,GACxBoB,EAAY3C,GAAIN,MAAO,EACvBuC,EAAaU,EAAY3C,GAAIR,OAC7B0C,EAAYS,EAAY3C,GAAIP,MAC5B0C,EAAaQ,GACbX,GAAQ,IAiCJtB,aA7De,SAACiD,GACpB,IAAMC,EAAerC,EAAUsC,QAAO,qBAAG7D,KAAgB2D,KACzDxB,EAAayB,IA4DTrC,UAAWA,EACXX,OAAQlB,EACRL,WAAYA,EACZE,YAAaA,EACbsB,eA1DiB,SAACb,GACtB,IAAM2C,EAAW,YAAOpB,GACxBoB,EAAY3C,GAAIN,MAAO,EACvByC,EAAaQ,GACbX,GAAQ,GACRD,EAAS,GACTD,EAAQ,IAAIzB,OAqDRS,qBAjCuB,SAAC6C,GAC5B,IAAMG,EAAcvC,EAAU4B,MAAK,SAACO,GAAD,OAAQA,EAAG1D,KAAO2D,KACrDG,EAAYtE,MAAQ0B,EACpB4C,EAAYrE,KAAOuB,EACnB8C,EAAY9D,GAAKgB,EACjB8C,EAAYpE,MAAO,EACnBsC,GAAQ,GACRD,EAAS,UCtJbgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.5944080c.chunk.js","sourcesContent":["import \"App.css\";\nimport { format } from \"date-fns\";\n\nconst Form = ({ handleDate, handleSubmit, handleSteps, steps, date, edit }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <label className=\"labelDate\" htmlFor=\"date\">\n        Дата(ДД.ММ.ГГ)\n      </label>\n      <label className=\"labelDistance\" htmlFor=\"distance\">\n        Пройдено км\n      </label>\n      <input\n        onChange={handleDate}\n        type=\"date\"\n        className=\"inputDate\"\n        id=\"date\"\n        name=\"date\"\n        readOnly={edit && true}\n        value={format(new Date(date), \"yyyy-MM-dd\")}\n        required={true}\n      />\n      <input\n        type=\"number\"\n        onChange={handleSteps}\n        required={true}\n        className=\"inputDistance\"\n        id=\"distance\"\n        name=\"distance\"\n        value={edit ? 1 : steps}\n        readOnly={edit && true}\n        placeholder=\"Number\"\n      />\n      <button\n        onSubmit={handleSubmit}\n        className=\"submit\"\n        type=\"submit\"\n        disabled={edit && true}\n      >\n        Ok\n      </button>\n    </form>\n  );\n};\nexport default Form;\n","import \"App.css\";\nimport React from \"react\";\nimport cn from \"classnames\";\nimport { format } from \"date-fns\";\nconst ItemResult = ({\n  id,\n  date,\n  steps,\n  handleRemove,\n  handleEditMode,\n  edit,\n  isEdit,\n  handleDate,\n  handleSteps,\n  cancelEditMode,\n  handleSaveEditChange,\n  idx,\n  stepsAll,\n  editDate,\n  editSteps,\n}) => {\n  return edit ? (\n    <div className=\"form-edit\">\n      <input\n        onChange={handleDate}\n        type=\"date\"\n        className=\"inputDate\"\n        id=\"date\"\n        name=\"date\"\n        value={format(new Date(editDate), \"yyyy-MM-dd\")}\n        required={true}\n      />\n      <input\n        type=\"number\"\n        onChange={handleSteps}\n        required={true}\n        className=\"inputDistance\"\n        id=\"distance\"\n        name=\"distance\"\n        value={isEdit && editSteps}\n        placeholder=\"Number\"\n      />\n      <button onClick={() => cancelEditMode(idx)} className=\"submit\">\n        cancel\n      </button>\n      <button className=\"submit\" onClick={() => handleSaveEditChange(id)}>\n        save\n      </button>\n    </div>\n  ) : (\n    <li className={cn(\"itemResult\", { \"itemResult activeItem\": edit })}>\n      <span>{format(new Date(date), \"dd-MM-yyyy\")}</span>\n      <span>{steps}</span>\n      <div className=\"icons\">\n        <i\n          className={cn(\"fa fa-pencil  fa-flip-horizontal\", {\n            \" fa-pencil-square-o\": edit,\n          })}\n          aria-hidden=\"true\"\n          onClick={(e) => !isEdit && handleEditMode(idx, e)}\n        />\n        <i\n          className=\"fa fa-times\"\n          onClick={() => !isEdit && handleRemove(id)}\n          aria-hidden=\"true\"\n        />\n      </div>\n    </li>\n  );\n};\nexport default ItemResult;\n","import \"App.css\";\nimport React from \"react\";\nimport ItemResult from \"./ItemResult\";\nimport { nanoid } from \"nanoid\";\nconst ResultList = ({\n  tableData,\n  handleRemove,\n  handleEditMode,\n  handleSaveEditChange,\n  isEdit,\n  handleDate,\n  handleSteps,\n  handleSubmit,\n  cancelEditMode,\n  stepsAll,\n  editDate,\n  editSteps,\n}) => {\n  return (\n    <React.Fragment>\n      <div className=\"titleResult\">\n        <span>Дата(ДД.ММ.ГГ)</span>\n        <span>Пройдено км</span>\n        <span>Действия</span>\n      </div>\n      <ul className=\"resultList\">\n        {tableData.length > 0 ? (\n          tableData.map(({ date, steps, id, edit }, idx) => (\n            <ItemResult\n              key={nanoid()}\n              date={date}\n              stepsAll={stepsAll}\n              handleRemove={handleRemove}\n              handleEditMode={handleEditMode}\n              steps={steps}\n              id={id}\n              edit={edit}\n              isEdit={isEdit}\n              handleDate={handleDate}\n              handleSteps={handleSteps}\n              handleSubmit={handleSubmit}\n              cancelEditMode={cancelEditMode}\n              idx={idx}\n              editDate={editDate}\n              editSteps={editSteps}\n              handleSaveEditChange={handleSaveEditChange}\n            />\n          ))\n        ) : (\n          <li className=\"noData\">No data to display</li>\n        )}\n      </ul>\n    </React.Fragment>\n  );\n};\nexport default ResultList;\n","import \"App.css\";\nimport Form from \"components/Form\";\nimport ResultList from \"components/ResultList\";\nimport { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\n\nconst App = () => {\n  const [date, setDate] = useState(new Date());\n  const [steps, setSteps] = useState(1);\n  const [edit, setEdit] = useState(false);\n  const [editSteps, setEditSteps] = useState(0);\n  const [editDate, setEditDate] = useState(0);\n  const [tableData, setTableData] = useState([]);\n  const formattedDate = format(new Date(date), \"yyyy-MM-dd\");\n\n  /**\n   * Функция handleKey очень простая\n   * если мы нажали на escape - с окна снимается прослушчик событий\n   * и мы больше не следим за нажатиями клавиш, так как нам надо следить\n   * за нажатием клавиш лишь в режиме редактирования! Если нет режима редактирования\n   * то и следить незачем. Ну и по клику на escape вызывается хук setEdit и отменяет глобальный режим редактирования\n   * и также надо пройти по всем записям и отменить edit true у которой есть;\n   */\n  const handleKey = (e) => {\n    console.log(\"e.keyCode\", e.keyCode);\n    if (e.keyCode === 27) {\n      window.removeEventListener(\"keydown\", handleKey);\n      setEdit(false);\n      const updatedData = tableData.map((item) =>\n        item.edit ? { ...item, edit: false } : item\n      );\n      setTableData(updatedData);\n    }\n  };\n\n  /**\n   * хук useEffect - это как наблюдатель\n   * в нашем случае, он следит за edit - и как только\n   * edit меняется он вызывается, в нашем случае\n   * как только edit true на все окно навешивается событие\n   * и мы получаем коды всех клавиш и на каждый клик\n   * вызывается функция handleKey\n   */\n  useEffect(() => {\n    console.log(\"вызываем хук useEffect только когда изменился edit!\");\n    window.addEventListener(\"keydown\", handleKey);\n    return () => window.removeEventListener(\"keydown\", handleKey);\n  }, [edit]);\n\n  const handleDate = ({ target: { value } }) => {\n    if (\n      format(new Date(value), \"yyyy-MM-dd\") > format(new Date(), \"yyyy-MM-dd\")\n    ) {\n      alert(\"Дата не может быть больше текущей даты\");\n    } else {\n      !edit ? setDate(value) : setEditDate(value);\n    }\n  };\n  const handleSteps = ({ target: { value } }) => {\n    !edit ? value >= 0 && setSteps(value) : value >= 0 && setEditSteps(value);\n  };\n  const clearForm = () => {\n    setDate(new Date());\n    setSteps(1);\n    setEdit(false);\n  };\n  const sumSteps = (foundId) => {\n    return tableData.reduce((acc, item) => {\n      if (item.id === foundId) {\n        return [\n          ...acc,\n          {\n            ...item,\n            steps: Number(item.steps) + Number(steps),\n          },\n        ];\n      }\n      item.edit = false;\n      return [...acc, item];\n    }, []);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (steps <= 0 || !date) {\n      return;\n    }\n    const foundId = tableData.find((d) => d.id === formattedDate)?.id;\n\n    if (foundId && !edit) {\n      setTableData(sumSteps(foundId));\n    } else if (edit) {\n      const updateData = tableData.map((el) => {\n        if (el.id === foundId) {\n          el.steps = steps;\n          el.id = formattedDate;\n          el.date = formattedDate;\n          el.edit = false;\n        }\n\n        return el;\n      });\n      setTableData(updateData);\n    } else {\n      setTableData([\n        ...tableData,\n        {\n          id: formattedDate,\n          date: formattedDate,\n          steps,\n        },\n      ]);\n    }\n    clearForm();\n  };\n\n  const handleRemove = (idItem) => {\n    const updateSubmit = tableData.filter(({ id }) => id !== idItem);\n    setTableData(updateSubmit);\n  };\n\n  /**\n   * отключаем режим редактирования у конкретной записи\n   */\n  const cancelEditMode = (id) => {\n    const updatedData = [...tableData];\n    updatedData[id].edit = false;\n    setTableData(updatedData);\n    setEdit(false);\n    setSteps(1);\n    setDate(new Date());\n  };\n\n  /**\n   * Включаем режим редактирования у конкретной записи\n   * также включаем глобальный режим редактирования,\n   * чтобы понимать, что наше приложение редактируется\n   */\n  const handleEditMode = (id) => {\n    const updatedData = [...tableData];\n    updatedData[id].edit = true;\n    setEditSteps(updatedData[id].steps);\n    setEditDate(updatedData[id].date);\n    setTableData(updatedData);\n    setEdit(true);\n  };\n\n  /**\n   * Функция для сохранения записи, после редактирования (вызывается по клику на кнопку save)\n   */\n  const handleSaveEditChange = (idItem) => {\n    const foundedItem = tableData.find((el) => el.id === idItem);\n    foundedItem.steps = editSteps;\n    foundedItem.date = editDate;\n    foundedItem.id = editDate;\n    foundedItem.edit = false;\n    setEdit(false);\n    setSteps(1);\n    // твоя реализация\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"title\">Учёт тренировок</div>\n      <Form\n        handleDate={handleDate}\n        handleSteps={handleSteps}\n        handleSubmit={handleSubmit}\n        date={date}\n        steps={steps}\n        edit={edit}\n      />\n      <ResultList\n        editDate={editDate}\n        editSteps={editSteps}\n        stepsAll={steps}\n        handleEditMode={handleEditMode}\n        handleRemove={handleRemove}\n        tableData={tableData}\n        isEdit={edit}\n        handleDate={handleDate}\n        handleSteps={handleSteps}\n        cancelEditMode={cancelEditMode}\n        handleSaveEditChange={handleSaveEditChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}