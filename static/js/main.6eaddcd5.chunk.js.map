{"version":3,"sources":["components/Form.js","components/ItemResult.js","components/ResultList.js","App.js","index.js"],"names":["Form","handleChange","handleSubmit","handleSelectDate","form","onSubmit","className","htmlFor","onChange","type","id","name","value","date","required","placeholder","distance","ItemResult","handleRemove","handleEdit","onClick","ResultList","submit","Fragment","map","App","dataDefault","useState","setForm","setSubmit","target","e","preventDefault","idxEdit","findIndex","idxDate","editItem","elem","Number","validateItem","nanoid","idItem","updateSubmit","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6eaddcd5.chunk.js","sourcesContent":["import \"App.css\";\nimport DatePicker from \"react-datepicker\";\n\nconst Form = ({ handleChange, handleSelectDate, handleSubmit, form }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <label className=\"labelDate\" htmlFor=\"date\">\n        Дата(ДД.ММ.ГГ)\n      </label>\n      <label className=\"labelDistance\" htmlFor=\"distance\">\n        Пройдено км\n      </label>\n      <input\n        onChange={handleChange}\n        type=\"date\"\n        className=\"inputDate\"\n        id=\"date\"\n        name=\"date\"\n        value={form.date}\n        required={true}\n        placeholder=\"Date\"\n      />\n      <input\n        type=\"number\"\n        onChange={handleChange}\n        required={true}\n        className=\"inputDistance\"\n        id=\"distance\"\n        name=\"distance\"\n        value={form.distance}\n        placeholder=\"Number\"\n      />\n      <button onSubmit={handleSubmit} className=\"submit\" type=\"submit\">\n        Ok\n      </button>\n    </form>\n  );\n};\nexport default Form;\n","import \"App.css\";\nimport React from \"react\";\n\nconst ItemResult = ({ id, date, distance, handleRemove, handleEdit }) => {\n  return (\n    <li className=\"itemResult\">\n      <span>{date}</span>\n      <span>{distance}</span>\n      <div className=\"icons\">\n        <i\n          className=\"fa fa-pencil  fa-flip-horizontal\"\n          aria-hidden=\"true\"\n          onClick={() => handleEdit(id, date, distance)}\n        />\n        {\"  \"}\n        <i\n          className=\"fa fa-times\"\n          onClick={() => handleRemove(id)}\n          aria-hidden=\"true\"\n        />\n      </div>\n    </li>\n  );\n};\nexport default ItemResult;\n","import \"App.css\";\nimport React from \"react\";\nimport ItemResult from \"./ItemResult\";\n\nconst ResultList = ({ submit, handleRemove, handleEdit }) => {\n  return (\n    <React.Fragment>\n      <div className=\"titleResult\">\n        <span>Дата(ДД.ММ.ГГ)</span>\n        <span>Пройдено км</span>\n        <span>Действия</span>\n      </div>\n      <ul className=\"resultList\">\n        {submit.map(({ date, distance, id }) => (\n          <ItemResult\n            key={id}\n            date={date}\n            handleRemove={handleRemove}\n            handleEdit={handleEdit}\n            distance={distance}\n            id={id}\n          />\n        ))}\n      </ul>\n    </React.Fragment>\n  );\n};\nexport default ResultList;\n","import \"App.css\";\nimport Form from \"components/Form\";\nimport ResultList from \"components/ResultList\";\nimport { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport format from \"date-fns/format\";\n\nconst App = () => {\n  const indexIsFalse = -1;\n  const dataDefault = {\n    id: \"\",\n    date: \"\",\n    distance: \"\",\n  };\n  const [form, setForm] = useState(dataDefault);\n  const [submit, setSubmit] = useState([]);\n  const handleChange = ({ target }) => {\n    //console.log(format(new Date(target.value), \"dd/MM/yy\"));\n    setForm({ ...form, [target.name]: target.value });\n  };\n  const validateItem = (submit, form) => {\n    return submit.map((elem) => {\n      if (elem.id === form.id) {\n        elem = form;\n      } else if (elem.date === form.date) {\n        elem.distance = Number(elem.distance) + Number(form.distance);\n      }\n      return elem;\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const idxEdit = submit.findIndex(({ id }) => id === form.id);\n    const idxDate = submit.findIndex(({ date }) => date === form.date);\n    const editItem = validateItem(submit, form);\n    form.id = nanoid();\n    idxDate !== indexIsFalse && setSubmit((submit[idxDate] = editItem));\n    idxEdit !== indexIsFalse && setSubmit((submit[idxEdit] = editItem));\n    idxDate === indexIsFalse &&\n      idxEdit === indexIsFalse &&\n      setSubmit([...submit, form]);\n    setForm(dataDefault);\n  };\n\n  const handleRemove = (idItem) => {\n    const updateSubmit = submit.filter(({ id }) => id !== idItem);\n    setSubmit(updateSubmit);\n  };\n\n  const handleEdit = (idItem, date, distance) => {\n    setForm({ id: idItem, date: date, distance: distance });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"title\">Учёт тренировок</div>\n      <Form\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        form={form}\n      />\n      <ResultList\n        handleEdit={handleEdit}\n        handleRemove={handleRemove}\n        submit={submit}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}