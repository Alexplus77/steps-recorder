{"version":3,"sources":["components/Form.js","components/ItemResult.js","components/ResultList.js","App.js","index.js"],"names":["Form","handleDate","handleSubmit","handleSteps","steps","date","edit","onSubmit","className","htmlFor","onChange","type","id","name","readOnly","value","format","Date","required","placeholder","disabled","ItemResult","handleRemove","handleEditMode","isEdit","cancelEditMode","handleSaveEditChange","idx","stepsAll","dateState","onClick","cn","e","ResultList","tableData","Fragment","length","map","nanoid","App","useState","setDate","setSteps","setEdit","setTableData","formattedDate","handleKey","console","log","keyCode","window","removeEventListener","updatedData","item","useEffect","addEventListener","target","alert","preventDefault","foundId","find","d","reduce","acc","Number","sumSteps","updateData","el","idItem","updateSubmit","filter","foundedItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0625a68.chunk.js","sourcesContent":["import \"App.css\";\nimport { format } from \"date-fns\";\n\nconst Form = ({ handleDate, handleSubmit, handleSteps, steps, date, edit }) => {\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <label className=\"labelDate\" htmlFor=\"date\">\n        Дата(ДД.ММ.ГГ)\n      </label>\n      <label className=\"labelDistance\" htmlFor=\"distance\">\n        Пройдено км\n      </label>\n      <input\n        onChange={handleDate}\n        type=\"date\"\n        className=\"inputDate\"\n        id=\"date\"\n        name=\"date\"\n        readOnly={edit && true}\n        value={format(new Date(date), \"yyyy-MM-dd\")}\n        required={true}\n      />\n      <input\n        type=\"number\"\n        onChange={handleSteps}\n        required={true}\n        className=\"inputDistance\"\n        id=\"distance\"\n        name=\"distance\"\n        value={edit ? 1 : steps}\n        readOnly={edit && true}\n        placeholder=\"Number\"\n      />\n      <button\n        onSubmit={handleSubmit}\n        className=\"submit\"\n        type=\"submit\"\n        disabled={edit && true}\n      >\n        Ok\n      </button>\n    </form>\n  );\n};\nexport default Form;\n","import \"App.css\";\nimport React from \"react\";\nimport cn from \"classnames\";\nimport { format } from \"date-fns\";\nconst ItemResult = ({\n  id,\n  date,\n  steps,\n  handleRemove,\n  handleEditMode,\n  edit,\n  isEdit,\n  handleDate,\n  handleSteps,\n  cancelEditMode,\n  handleSaveEditChange,\n  idx,\n  stepsAll,\n  dateState,\n}) => {\n  return edit ? (\n    <div className=\"form-edit\">\n      <input\n        onChange={handleDate}\n        type=\"date\"\n        className=\"inputDate\"\n        id=\"date\"\n        name=\"date\"\n        value={format(new Date(dateState), \"yyyy-MM-dd\")}\n        required={true}\n      />\n      <input\n        type=\"number\"\n        onChange={handleSteps}\n        required={true}\n        className=\"inputDistance\"\n        id=\"distance\"\n        name=\"distance\"\n        value={isEdit ? stepsAll : steps}\n        placeholder=\"Number\"\n      />\n      <button onClick={() => cancelEditMode(idx)} className=\"submit\">\n        cancel\n      </button>\n      <button className=\"submit\" onClick={() => handleSaveEditChange(id)}>\n        save\n      </button>\n    </div>\n  ) : (\n    <li className={cn(\"itemResult\", { \"itemResult activeItem\": edit })}>\n      <span>{format(new Date(date), \"dd-MM-yyyy\")}</span>\n      <span>{steps}</span>\n      <div className=\"icons\">\n        <i\n          className={cn(\"fa fa-pencil  fa-flip-horizontal\", {\n            \" fa-pencil-square-o\": edit,\n          })}\n          aria-hidden=\"true\"\n          onClick={(e) => !isEdit && handleEditMode(idx, e)}\n        />\n        <i\n          className=\"fa fa-times\"\n          onClick={() => !isEdit && handleRemove(id)}\n          aria-hidden=\"true\"\n        />\n      </div>\n    </li>\n  );\n};\nexport default ItemResult;\n","import \"App.css\";\nimport React from \"react\";\nimport ItemResult from \"./ItemResult\";\nimport { nanoid } from \"nanoid\";\nconst ResultList = ({\n  tableData,\n  handleRemove,\n  handleEditMode,\n  handleSaveEditChange,\n  isEdit,\n  handleDate,\n  handleSteps,\n  handleSubmit,\n  cancelEditMode,\n  stepsAll,\n  dateState,\n}) => {\n  return (\n    <React.Fragment>\n      <div className=\"titleResult\">\n        <span>Дата(ДД.ММ.ГГ)</span>\n        <span>Пройдено км</span>\n        <span>Действия</span>\n      </div>\n      <ul className=\"resultList\">\n        {tableData.length > 0 ? (\n          tableData.map(({ date, steps, id, edit }, idx) => (\n            <ItemResult\n              key={nanoid()}\n              date={date}\n              stepsAll={stepsAll}\n              handleRemove={handleRemove}\n              handleEditMode={handleEditMode}\n              steps={steps}\n              id={id}\n              edit={edit}\n              isEdit={isEdit}\n              handleDate={handleDate}\n              handleSteps={handleSteps}\n              handleSubmit={handleSubmit}\n              cancelEditMode={cancelEditMode}\n              idx={idx}\n              dateState={dateState}\n              handleSaveEditChange={handleSaveEditChange}\n            />\n          ))\n        ) : (\n          <li className=\"noData\">No data to display</li>\n        )}\n      </ul>\n    </React.Fragment>\n  );\n};\nexport default ResultList;\n","import \"App.css\";\nimport Form from \"components/Form\";\nimport ResultList from \"components/ResultList\";\nimport { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\n\nconst App = () => {\n  const [date, setDate] = useState(new Date());\n  const [steps, setSteps] = useState(1);\n  const [edit, setEdit] = useState(false);\n\n  const [tableData, setTableData] = useState([]);\n  const formattedDate = format(new Date(date), \"yyyy-MM-dd\");\n\n  /**\n   * Функция handleKey очень простая\n   * если мы нажали на escape - с окна снимается прослушчик событий\n   * и мы больше не следим за нажатиями клавиш, так как нам надо следить\n   * за нажатием клавиш лишь в режиме редактирования! Если нет режима редактирования\n   * то и следить незачем. Ну и по клику на escape вызывается хук setEdit и отменяет глобальный режим редактирования\n   * и также надо пройти по всем записям и отменить edit true у которой есть;\n   */\n  const handleKey = (e) => {\n    console.log(\"e.keyCode\", e.keyCode);\n    if (e.keyCode === 27) {\n      window.removeEventListener(\"keydown\", handleKey);\n      setEdit(false);\n      const updatedData = tableData.map((item) =>\n        item.edit ? { ...item, edit: false } : item\n      );\n      setTableData(updatedData);\n    }\n  };\n\n  /**\n   * хук useEffect - это как наблюдатель\n   * в нашем случае, он следит за edit - и как только\n   * edit меняется он вызывается, в нашем случае\n   * как только edit true на все окно навешивается событие\n   * и мы получаем коды всех клавиш и на каждый клик\n   * вызывается функция handleKey\n   */\n  useEffect(() => {\n    console.log(\"вызываем хук useEffect только когда изменился edit!\");\n    window.addEventListener(\"keydown\", handleKey);\n    return () => window.removeEventListener(\"keydown\", handleKey);\n  }, [edit]);\n\n  const handleDate = ({ target: { value } }) => {\n    if (\n      format(new Date(value), \"yyyy-MM-dd\") > format(new Date(), \"yyyy-MM-dd\")\n    ) {\n      alert(\"Дата не может быть больше текущей даты\");\n    } else {\n      console.log(value);\n      setDate(value);\n    }\n  };\n  const handleSteps = ({ target: { value } }) => {\n    value >= 0 && setSteps(value);\n  };\n  const clearForm = () => {\n    setDate(new Date());\n    setSteps(1);\n    setEdit(false);\n  };\n  const sumSteps = (foundId) => {\n    return tableData.reduce((acc, item) => {\n      if (item.id === foundId) {\n        return [\n          ...acc,\n          {\n            ...item,\n            steps: Number(item.steps) + Number(steps),\n          },\n        ];\n      }\n      item.edit = false;\n      return [...acc, item];\n    }, []);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (steps <= 0 || !date) {\n      return;\n    }\n    const foundId = tableData.find((d) => d.id === formattedDate)?.id;\n\n    if (foundId && !edit) {\n      setTableData(sumSteps(foundId));\n    } else if (edit) {\n      const updateData = tableData.map((el) => {\n        if (el.id === foundId) {\n          el.steps = steps;\n          el.id = formattedDate;\n          el.date = formattedDate;\n          el.edit = false;\n        }\n\n        return el;\n      });\n      setTableData(updateData);\n    } else {\n      setTableData([\n        ...tableData,\n        {\n          id: formattedDate,\n          date: formattedDate,\n          steps,\n        },\n      ]);\n    }\n    clearForm();\n  };\n\n  const handleRemove = (idItem) => {\n    const updateSubmit = tableData.filter(({ id }) => id !== idItem);\n    setTableData(updateSubmit);\n  };\n\n  /**\n   * отключаем режим редактирования у конкретной записи\n   */\n  const cancelEditMode = (id) => {\n    const updatedData = [...tableData];\n    updatedData[id].edit = false;\n    setTableData(updatedData);\n    setEdit(false);\n    setSteps(1);\n    setDate(new Date());\n  };\n\n  /**\n   * Включаем режим редактирования у конкретной записи\n   * также включаем глобальный режим редактирования,\n   * чтобы понимать, что наше приложение редактируется\n   */\n  const handleEditMode = (id) => {\n    const updatedData = [...tableData];\n    updatedData[id].edit = true;\n    setSteps(updatedData[id].steps);\n    setDate(updatedData[id].date);\n    setTableData(updatedData);\n    setEdit(true);\n  };\n\n  /**\n   * Функция для сохранения записи, после редактирования (вызывается по клику на кнопку save)\n   */\n  const handleSaveEditChange = (idItem) => {\n    const foundedItem = tableData.find((el) => el.id === idItem);\n    foundedItem.steps = steps;\n    foundedItem.date = date;\n    foundedItem.edit = false;\n    setEdit(false);\n    setSteps(1);\n    // твоя реализация\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"title\">Учёт тренировок</div>\n      <Form\n        handleDate={handleDate}\n        handleSteps={handleSteps}\n        handleSubmit={handleSubmit}\n        date={date}\n        steps={steps}\n        edit={edit}\n      />\n      <ResultList\n        dateState={date}\n        stepsAll={steps}\n        handleEditMode={handleEditMode}\n        handleRemove={handleRemove}\n        tableData={tableData}\n        isEdit={edit}\n        handleDate={handleDate}\n        handleSteps={handleSteps}\n        cancelEditMode={cancelEditMode}\n        handleSaveEditChange={handleSaveEditChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}